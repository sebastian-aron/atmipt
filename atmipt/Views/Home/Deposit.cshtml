@{
    ViewBag.Title = "Cash Deposit";
    string bankColor = "#222";

    var bankColors = new Dictionary<string, string>
    {
        { "BDO", "#0033A0" },
        { "China Bank", "#D71A28" },
        { "PNB", "#004990" },
        { "LandBank", "#008000" },
        { "BPI", " #8B0000" },
        { "Visa", "#1A1F71" },
        { "Mastercard", "#222" },
        { "American Express", "#007BFF" }
    };

    if (ViewBag.BankName != null && bankColors.ContainsKey(ViewBag.BankName))
    {
        bankColor = bankColors[ViewBag.BankName];
    }
}
<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        body {
            background-color: #f0f8ff;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .atm-container {
            width: 800px;
            height: 800px;
            background-color: white;
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.5);
        }

        .atm-screen {
            background-color: @bankColor;
            color: white;
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 20px;
            margin-top: 10px;
        }

            .atm-screen h2 {
                font-weight: bold;
                font-size: 35px;
            }

            .atm-screen p {
                font-size: 18px;
            }

        .form-group {
            display: grid;
            grid-template-columns: 100px 1fr;
            align-items: center;
            gap: 10px;
            margin-bottom: 15px;
        }

            .form-group label {
                text-align: right;
                padding-right: 10px;
            }

        .form-control {
            width: 100%;
            padding: 8px;
            border: 2px solid @bankColor;
            border-radius: 5px;
            font-size: 16px;
        }

        .atm-button {
            background-color: @bankColor;
            color: white;
            padding: 10px;
            width: 100%;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 18px;
        }

            .atm-button:hover {
                background-color: darken(@bankColor, 10%);
            }

        .back-button {
            display: block;
            margin-top: 10px;
            text-decoration: none;
            color: @bankColor;
            font-weight: bold;
        }

        .receipt-wrapper {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            margin-top: 20px; 
        }
       
        .receipt-container {
            width: 100%; 
            max-width: 350px; 
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.2);
            font-family: 'Courier New', monospace;
            text-align: center;
        }

       
        .receipt-header h2 {
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .receipt-title {
            font-size: 14px;
            font-weight: bold;
            color: #555;
        }

        
        .receipt-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }

            .receipt-table td {
                padding: 8px;
                font-size: 14px;
                border-bottom: 1px dashed #ddd;
            }

                .receipt-table td:first-child {
                    font-weight: bold;
                    text-align: left;
                    width: 50%;
                }

                .receipt-table td:last-child {
                    text-align: right;
                }

        .receipt-date {
            font-size: 12px;
            color: #666;
            margin-top: 10px;
        }

       
        .receipt-thankyou {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin-top: 15px;
        }

        .text-muted {
            font-size: 14px;
            color: gray;
        }

        .notification {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            padding: 15px 20px;
            border-radius: 5px;
            z-index: 1000;
            display: none;
        }

            .notification.success {
                background-color: #d4edda;
                color: #155724;
            }

            .notification.error {
                background-color: #f8d7da;
                color: #721c24;
            }

        .done-button-container {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 10px;
            width: 100%;
            margin-top: 10px;
        }

        .done-button {
            display: inline-block;
            width: 80%; 
            padding: 10px;
            background-color: #222;
            color: white;
            font-size: 16px;
            border-radius: 5px;
            text-decoration: none;
            transition: 0.3s;
        }

            .done-button:hover {
                background-color: #444;
            }
       
        .done-button-container {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 10px;
            width: 100%;
            margin-top: 10px;
        }
     
        .done-button {
            flex: 1;
            max-width: 140px;
            padding: 8px 12px;
            border: 2px solid @bankColor;
            background-color: transparent;
            color: @bankColor;
            border-radius: 5px;
            font-size: 14px;
            text-align: center;
            cursor: pointer;
            transition: 0.3s ease-in-out;
            white-space: nowrap;
        }

            .done-button:hover {
                background-color: whitesmoke;
            }

        input[type="number"]::-webkit-inner-spin-button,
        input[type="number"]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }


        input[type="number"] {
            appearance: textfield;
        }
    </style>
</head>
<body>
    <div class="d-flex justify-content-center">
        <div class="atm-container">
            <div class="atm-screen">
                <pre></pre>
                <h2>@ViewBag.BankName ATM</h2>
                <p>Cash Deposit</p>
            </div>

            @if (ViewBag.ShowReceipt != null && ViewBag.ShowReceipt)
            {
                var receiptData = TempData["ReceiptData"] as dynamic;
                <div class="receipt-wrapper">
                    <div id="receiptContent" class="receipt-container">
                        <div class="receipt-header">
                            <h2>@receiptData.BankName</h2>
                            <p class="receipt-title">Transaction Receipt</p>
                        </div>
                        <hr />
                        <table class="receipt-table">
                            <tr>
                                <td>Name:</td>
                                <td>@receiptData.UserName</td>
                            </tr>
                            <tr>
                                <td>Account No:</td>
                                <td>
                                    @{
                                        string maskedAccountNumber = "****" + receiptData.AccountNumber.Substring(receiptData.AccountNumber.Length - 4);
                                    }
                                    @maskedAccountNumber
                                </td>
                            </tr>
                            <tr>
                                <td>Transaction Type:</td>
                                <td>@receiptData.TransactionType</td>
                            </tr>
                            <tr>
                                <td>Deposited Amount:</td>
                                <td>₱@receiptData.Amount.ToString("N2")</td>
                            </tr>
                            <tr>
                                <td>Transaction Fee:</td>
                                <td>₱0.00</td>
                            </tr>
                            <tr>
                                <td><b>Total Credit:</b></td>
                                <td><b>₱@receiptData.Amount.ToString("N2")</b></td>
                            </tr>
                            <tr>
                                <td><b>New Balance:</b></td>
                                <td><b>₱@receiptData.Balance.ToString("N2")</b></td>
                            </tr>
                        </table>
                        <hr />
                        <p class="receipt-date">Date: @receiptData.Date.ToString("MMMM dd, yyyy HH:mm:ss")</p>
                        <p class="receipt-thankyou">Thank you for banking with us!</p>
                    </div>
                </div>
               
                  <div class="done-button-container">
                     
                        <a href="@Url.Action("Index", "Home")" class="done-button">eject card</a>
                    <button id="downloadReceipt" class="done-button">print receipt</button>
                    </div>
                
            }
            else
            {
                <form method="post">
                    <pre> 
                        </pre>

                    <div class="form-group">
                        <label>Amount:</label>
                        <input type="number" name="amount" min="1" class="form-control" required />
                    </div>
                    <pre> 
                    </pre>

                    <button type="submit" class="atm-button">Deposit</button>
                </form>
                <pre>
                    

                </pre>

                <a href="@Url.Action("MainMenu", "Home", new { bank = ViewBag.BankName })" class="back-button">← Back to Menu</a>

            }
            @if (ViewBag.Message != null)
            {
                <div class="notification @(ViewBag.Message.ToString().Contains("successful") ? "success" : "error")" id="notification">
                    @ViewBag.Message
                </div>
                <script>
                    document.addEventListener('DOMContentLoaded', function () {
                        var notification = document.getElementById('notification');
                        notification.style.display = 'block';
                        setTimeout(function () {
                            notification.style.display = 'none';
                    @if (!ViewBag.Message.ToString().Contains("successful"))
                    {
                        @:window.location.href = '@Url.Action("Deposit", "Home", new { bank = ViewBag.BankName })'; // Redirect to Deposit on error
                    }
                        }, 3000); // Hide after 3 seconds
                    });
                </script>

                <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
                <script>
                    document.getElementById('downloadReceipt')?.addEventListener('click', function () {
                        const receipt = document.getElementById('receiptContent'); // Select receipt content
                        html2canvas(receipt, { scale: 2 }).then(canvas => {
                            const imgData = canvas.toDataURL('image/png'); // Convert to image
                            const { jsPDF } = window.jspdf;
                            const pdf = new jsPDF({
                                orientation: 'p',
                                unit: 'mm',
                                format: 'a4'
                            });

                            // Calculate width & height for the image in PDF
                            const imgWidth = 190; // Adjust width
                            const imgHeight = (canvas.height * imgWidth) / canvas.width;

                            pdf.addImage(imgData, 'PNG', 10, 10, imgWidth, imgHeight);
                            pdf.save("Transaction_Receipt.pdf"); // Save as PDF
                        });
                    });
                </script>
            }

        </div>
    </div>
</body>
</html>