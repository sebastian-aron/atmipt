@{
    ViewBag.Title = "Transfer Funds";
    string bankColor = "#222";

    var bankColors = new Dictionary<string, string>
    {
        { "BDO", "#0033A0" },
        { "China Bank", "#D71A28" },
        { "PNB", "#004990" },
        { "LandBank", "#008000" },
        { "BPI", "#8B0000" },
        { "Visa", "#1A1F71" },
        { "Mastercard", "#222" },
        { "American Express", "#007BFF" }
    };

    if (ViewBag.BankName != null && bankColors.ContainsKey(ViewBag.BankName))
    {
        bankColor = bankColors[ViewBag.BankName];
    }

    var banks = new List<string> { "BDO", "China Bank", "PNB", "LandBank", "BPI", "Visa", "Mastercard", "American Express" };
}
<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        body {
            background-color: #f0f8ff;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .atm-container {
            width: 800px;
            height: 450px;
            background-color: white;
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.5);
        }

        .atm-screen {
            background-color: @bankColor;
            color: white;
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 20px;
            margin-top: 10px;
        }

            .atm-screen h2 {
                font-weight: bold;
                font-size: 35px;
            }

            .atm-screen p {
                font-size: 18px;
            }

        .form-group {
            margin-top: 20px;
            margin-bottom: 20px;
        }

        .form-control {
            width: calc(100% - 170px);
            padding: 8px;
            border: 2px solid @bankColor;
            border-radius: 5px;
            font-size: 16px;
        }

        .atm-container {
            width: 800px;
            height: auto; 
            min-height: 600px; 
            background-color: white;
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.5);
            display: flex;
            flex-direction: column; 
            justify-content: space-between; 
            overflow: hidden;
        }

        .atm-button {
            background-color: @bankColor;
            color: white;
            padding: 10px;
            width: 100%;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 18px;
        }

            .atm-button:hover {
                background-color: darken(@bankColor, 10%);
            }

        .back-button {
            display: block;
            margin-top: 10px;
            text-decoration: none;
            color: @bankColor;
            font-weight: bold;
        }

        .form-row {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        label {
            width: 150px;
            text-align: left;
        }

    
     

        .receipt-container {
            background-color: #ffffff;
            width: 320px;
            max-width: 100%;
            border: 2px solid #ccc;
            padding: 15px;
            font-family: 'Courier New', Courier, monospace;
            font-size: 14px;
            line-height: 1.6;
            margin: 20px auto;
            border-radius: 8px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
            text-align: center;
        }

            
            .receipt-container h3 {
                font-size: 20px;
                margin-bottom: px;
                text-transform: uppercase;
                font-weight: bold;
                letter-spacing: 1px;
            }

        .receipt-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }

            .receipt-table td {
                padding: 8px 5px;
                border-bottom: 1px dashed #aaa;
                text-align: left;
                font-size: 14px;
            }

                .receipt-table td:first-child {
                    font-weight: bold;
                    width: 45%;
                    text-align: left;
                }

           
            .receipt-table tr:last-child td {
                border-bottom: none;
                font-weight: bold;
                font-size: 16px;
            }

       
        .receipt-separator {
            border-top: 2px dashed #aaa;
            margin: 12px 0;
        }

        .button-container {
            display: flex;
            justify-content: center; 
            flex-wrap: wrap;
            gap: 10px; 
            width: 100%; 
            margin-top: 10px;
        }

        .atm-buttons {
            flex: 1;
            max-width: 140px;
            padding: 8px 12px;
            border: 2px solid @bankColor;
            background-color: transparent;
            color: @bankColor;
            border-radius: 5px;
            font-size: 14px;
            text-align: center;
            cursor: pointer;
            transition: 0.3s ease-in-out;
            white-space: nowrap;
        }

   
        .receipt-container {
            overflow: hidden;
        }
        .notification {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            padding: 15px 20px;
            border-radius: 5px;
            z-index: 1000;
            display: none;
        }

            .notification.success {
                background-color: #d4edda;
                color: #155724;
            }

            .notification.error {
                background-color: #f8d7da;
                color: #721c24;
            }

        input[type="number"]::-webkit-inner-spin-button,
        input[type="number"]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        
        input[type="number"] {
            appearance: textfield;
        }
    </style>
</head>
<body>
    <div class="d-flex justify-content-center">
        <div class="atm-container">
            <div class="atm-screen">
                <pre></pre>
                <h2>@ViewBag.BankName ATM</h2>
                <p>Transfer Funds</p>
            </div>
            @if (ViewBag.ShowReceipt != null && ViewBag.ShowReceipt)
            {
                var receiptData = TempData["ReceiptData"] as dynamic;
                <div class="receipt-container">
                    <h3>Transaction Receipt</h3>
                    <table class="receipt-table">
                        <tr>
                            <td>From:</td>
                            <td>@receiptData.UserName ****@receiptData.AccountNumber.Substring(receiptData.AccountNumber.Length - 4)  (@ViewBag.BankName)</td>
                        </tr>
                        <tr>
                            <td>To:</td>
                            <td>
                                @receiptData.TransactionType.Split('(')[1].TrimEnd(')')
                                ****@(receiptData.TransactionType.Split(' ')[2].Substring(receiptData.TransactionType.Split(' ')[2].Length - 4))
                                 (@receiptData.RecipientBankName)
                            </td>
                        </tr>
                        <tr>
                            <td>Amount:</td>
                            <td>@receiptData.Amount</td>
                        </tr>
                        <tr>
                            <td>Fee:</td>
                            <td>@receiptData.TransferFee</td>
                        </tr>
                        <tr>
                            <td>Total:</td>
                            <td>@receiptData.TotalAmount</td>
                        </tr>
                        <tr>
                            <td>Date:</td>
                            <td>@receiptData.Date.ToString("MMMM dd, yyyy HH:mm:ss")</td>
                        </tr>
                    </table>
                </div>
                <div class="button-container">
                    <button class="atm-buttons" onclick="location.href='@Url.Action("MainMenu", "Home", new { bank = ViewBag.BankName })'">Back to menu</button>
                    <button class="atm-buttons" onclick="location.href='@Url.Action("Index", "Home")'">Eject Card</button>
                </div>
            }
            else
            {
                <form method="post">
                    <pre> </pre>
                    <div class="form-group form-row">
                        <label for="recipientBankName">Recipient Bank:</label>
                        <select name="recipientBankName" id="recipientBankName" class="form-control" required>
                            <option value="">Select Bank</option>
                            @foreach (var bank in banks)
                            {
                                <option value="@bank">@bank</option>
                            }
                        </select>
                    </div>

                    <div class="form-group form-row">
                        <label for="recipientAccountNumber">Recipient Account Number:</label>
                        <input type="hidden" name="printReceipt" value="true" />
                        <input type="number" name="recipientAccountNumber" class="form-control" required />
                    </div>

                    <div class="form-group form-row">
                        <label for="amount">Amount:</label>
                        <input type="number" name="amount" min="100" class="form-control" required />
                    </div>

                    <button type="submit" class="atm-button">Transfer</button>
                </form>

                <a href="@Url.Action("MainMenu", "Home", new { bank = ViewBag.BankName })" class="back-button">← Back to Menu</a>
            }

            @if (ViewBag.Message != null)
            {
                <div class="notification @(ViewBag.Message.ToString().Contains("successful") ? "success" : "error")" id="notification">
                    @ViewBag.Message
                </div>
                <script>
                    document.addEventListener('DOMContentLoaded', function () {
                        var notification = document.getElementById('notification');
                        notification.style.display = 'block';
                        setTimeout(function () {
                            notification.style.display = 'none';
                    @if (!ViewBag.Message.ToString().Contains("successful"))
                    {
                        @:window.location.href = '@Url.Action("TransferFunds", "Home", new { bank = ViewBag.BankName })'; // Redirect to TransferFunds on error
                    }
                                                                }, 3000); // Hide after 3 seconds
                    });
                </script>
            }

        </div>
    </div>
</body>
</html>