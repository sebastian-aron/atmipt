@{
    ViewBag.Title = "Check Balance";
    string bankColor = "#222";

    var bankColors = new Dictionary<string, string>
    {
        { "BDO", "#0033A0" },
        { "China Bank", "#D71A28" },
        { "PNB", "#004990" },
        { "LandBank", "#008000" },
        { "BPI", "#8B0000" },
        { "Visa", "#1A1F71" },
        { "Mastercard", "#222" },
        { "American Express", "#007BFF" }
    };

    if (ViewBag.BankName != null && bankColors.ContainsKey(ViewBag.BankName))
    {
        bankColor = bankColors[ViewBag.BankName];
    }
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        body {
            background-color: #f0f8ff;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            flex-direction: column;
            gap: 20px;
        }

        .atm-container {
            width: 800px;
            height: 600px;
            background-color: white;
            border-radius: 15px;
            padding: 25px;
            text-align: center;
            box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.4);
            animation: fadeIn 0.7s ease-in-out;
        }

        

        .atm-screen {
            background-color: @bankColor;
            color: white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 25px;
        }

            .atm-screen h2 {
                font-weight: bold;
                font-size: 32px;
            }

        .balance-options {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-bottom: 30px;
        }

        .balance-option {
            width: 200px;
            height: 60px;
            font-size: 22px;
            padding: 12px;
            background-color: @bankColor;
            color: white;
            border-radius: 8px;
            text-decoration: none;
            text-align: center;
            font-weight: bold;
            transition: all 0.3s;
        }

			.balance-option:hover {
				background-color: darken( @bankColor, 10%);
				transform: scale(1.05);
            }

        .balance-wrapper {
            display: flex;
            align-items: center;
            justify-content: space-between;
            width: 90%;
            margin: auto;
            gap: 15px;
        }

        .balance-description {
            font-size: 22px;
            font-weight: bold;
            color: #333;
            flex-shrink: 0;
            width: 200px;
            text-align: left;
        }

        .balance-container {
            background-color: #f5f5f5;
            padding: 15px;
            border-radius: 10px;
            width: 100%;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        }

        .balance-text {
            font-size: 30px;
            font-weight: bold;
            flex-grow: 1;
            text-align: center;
            transition: opacity 0.5s ease-in-out;
        }

        

        .hide-button {
            background: none;
            border: none;
            font-size: 22px;
            cursor: pointer;
            color: @bankColor;
            transition: color 0.3s;
        }

            .hide-button:hover {
                color: darken( @bankColor, 10%);
            }

        .back-button {
            display: block;
            margin-top: 20px;
            font-size: 18px;
            text-decoration: none;
            color: @bankColor;
            font-weight: bold;
            transition: color 0.3s;
        }

            .back-button:hover {
                color: darken( @bankColor, 10%);
            }
    </style>
    <script>
        let isHidden = true;
        function toggleBalance() {
            let balanceAmount = document.getElementById('balanceAmount');
            let toggleIcon = document.getElementById('toggleIcon');

            if (isHidden) {
                balanceAmount.style.opacity = '0';
                setTimeout(() => { balanceAmount.textContent = '@ViewBag.Balance'; balanceAmount.style.opacity = '1'; }, 300);
                toggleIcon.textContent = '👁️‍🗨️';
                isHidden = false;
            } else {
                balanceAmount.style.opacity = '0';
                setTimeout(() => { balanceAmount.textContent = '••••••'; balanceAmount.style.opacity = '1'; }, 300);
                toggleIcon.textContent = '👁️‍🗨️';
                isHidden = true;
            }
        }
    </script>
</head>
<body>
    <div class="d-flex justify-content-center">
        <div class="atm-container">
            <div class="atm-screen">
                <h2>@ViewBag.BankName ATM</h2>
                <p>Check Balance</p>
            </div>

            <div class="balance-options">
                <a href="@Url.Action("CheckBalance", "Home", new { bank = ViewBag.BankName, accountType = "Savings" })" class="balance-option">Savings</a>
                <a href="@Url.Action("CheckBalance", "Home", new { bank = ViewBag.BankName, accountType = "Current" })" class="balance-option">Current</a>
            </div>

            @if (ViewBag.ShowBalance)
            {
                <div class="balance-wrapper">
                    <div class="balance-description">Available Balance:</div>
                    <div class="balance-container">
                        <button class="hide-button" onclick="toggleBalance()">
                            <span id="toggleIcon">👁️‍🗨️</span>
                        </button>
                        <p class="balance-text" id="balanceAmount">••••••</p>
                    </div>
                </div>
            }

            <a href="@Url.Action("MainMenu", "Home", new { bank = ViewBag.BankName })" class="back-button">← Back to Menu</a>
        </div>
    </div>
</body>
</html>
